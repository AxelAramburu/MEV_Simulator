/// <reference types="node" />
import { AccountInfo, Connection, PublicKey } from "@solana/web3.js";
import { Address } from "../address-util";
import { ParsableEntity } from "./parsing";
export declare function getParsedAccount<T>(connection: Connection, address: Address, parser: ParsableEntity<T>): Promise<T | null>;
export declare function getMultipleParsedAccounts<T>(connection: Connection, addresses: Address[], parser: ParsableEntity<T>, chunkSize?: number): Promise<(T | null)[]>;
export type FetchedAccountEntry = [PublicKey, AccountInfo<Buffer> | null];
export type FetchedAccountMap = Map<string, AccountInfo<Buffer> | null>;
export declare function getMultipleAccountsInMap(connection: Connection, addresses: Address[], timeoutAfterSeconds?: number, chunkSize?: number): Promise<Readonly<FetchedAccountMap>>;
export declare function getMultipleAccounts(connection: Connection, addresses: Address[], timeoutAfterSeconds?: number, chunkSize?: number): Promise<Readonly<FetchedAccountEntry[]>>;
